defaults: &defaults
    docker:
        - image: gcr.io/blameless-185322/blameless-ci:3.13-13
          environment:
              TZ: 'America/Los_Angeles'
          auth:
              username: _json_key
              password: $GOOGLE_SA_KEY
    resource_class: large
    environment:
        TZ: 'America/Los_Angeles'

version_bump_only: &version_bump_only
    name: Check if commit is only a version bump
    command: |
        COMMIT_AUTHOR="$(git --no-pager log --name-status HEAD^..HEAD| sed -n '2 p')"
        AUTHOR_CHECK="Author: ${GITHUB_NAME} <${GITHUB_EMAIL}>"
        if [[ $COMMIT_AUTHOR == $AUTHOR_CHECK ]]; then
          echo "Version Bump: true"
          touch /tmp/.version_bump_${CIRCLE_SHA1}
        else
          echo "Version Bump: false"
        fi

docs_build_only: &docs_build_only
    name: Check if commit is only a version bump
    command: |
        COMMIT_AUTHOR="$(git --no-pager log --name-status HEAD^..HEAD| sed -n '2 p')"
        COMMIT_MESSAGE="$(git --no-pager log --name-status HEAD^..HEAD| sed -n '5 p' | cut -d ' ' -f5)"
        AUTHOR_CHECK="Author: ${GITHUB_NAME} <${GITHUB_EMAIL}>"
        RX='^([0-9]+\.){0,2}(\*|[0-9]+)$'
        if [[ $COMMIT_MESSAGE =~ $RX ]] && [[ $COMMIT_AUTHOR == $AUTHOR_CHECK ]]; then
          echo "Version Bump: true"
          touch /tmp/.docs_build_${CIRCLE_SHA1}
        else
          echo "Docs Bump: false"
        fi

version: 2
jobs:
    install_npm_modules:
        docker:
        - image: cimg/node:lts
        steps:
            - checkout
            - run:
                  <<: *version_bump_only
            - run:
                  name: Install node modules
                  command: |
                      if [ ! -f /tmp/.version_bump_${CIRCLE_SHA1} ]; then
                          node --version
                          yarn install
                      else
                          echo "Last commit was by me and just a version bump. No work needed."
                      fi
            - save_cache:
                  paths:
                      - ./node_modules/
                  key: blameless-backstage-node_modules-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}

    build:
        docker:
        - image: cimg/node:lts
        steps:
            - checkout
            - run:
                  <<: *version_bump_only
            - restore_cache:
                  key: blameless-backstage-node_modules-
            - run:
                  name: Run Yarn build
                  command: |
                      if [ ! -f /tmp/.version_bump_${CIRCLE_SHA1} ]; then
                        yarn build
                      else
                        echo "Last commit was by me and just a version bump. No work needed."
                      fi
            - save_cache:
                  paths:
                      - ./dist/
                  key: blameless-backstage-build-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}

    test:
        docker:
        - image: cimg/node:lts
        steps:
            - checkout
            - run:
                  <<: *version_bump_only
            - restore_cache:
                  key: blameless-backstage-node_modules-
            - run:
                  name: Run yarn install and test
                  command: |
                      if [ ! -f /tmp/.version_bump_${CIRCLE_SHA1} ]; then
                        yarn lint
                        yarn test -t $CODECOV_TOKEN
                      else
                        echo "Last commit was by me and just a version bump. No work needed."
                      fi

    release_node_module:
        docker:
        - image: cimg/node:lts
        steps:
            - checkout
            - run:
                  <<: *version_bump_only
            - restore_cache:
                  key: blameless-backstage-node_modules-
            - restore_cache:
                  key: blameless-backstage-build-
            - run:
                  name: Release Node Module
                  command: |
                      if [ ! -f /tmp/.version_bump_${CIRCLE_SHA1} ]; then
                          echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc
                          echo 'unsafe-perm = true' > ~/.npmrc
                          git config --global user.email "${GITHUB_EMAIL}"
                          git config --global user.name "${GITHUB_NAME}"
                          npm version minor
                          npm publish
                      else
                          echo "Last commit was by me and just a version bump. No work needed."
                      fi

    build_and_publish_docs:
        docker:
        - image: cimg/node:lts
        steps:
            - checkout
            - run:
                  <<: *docs_build_only
            - restore_cache:
                  key: blameless-backstage-node_modules-
            - run:
                  name: Run test
                  command: |
                      if [ -f /tmp/.docs_build_${CIRCLE_SHA1} ]; then
                          yarn test:generate-output
                      else
                          echo "Last commit wasn't a version bump. Not building docs"
                      fi
            - run:
                  name: Build Storybook
                  command: |
                      if [ -f /tmp/.docs_build_${CIRCLE_SHA1} ]; then
                          NODE_OPTIONS=--openssl-legacy-provider ./node_modules/@storybook/react/bin/build.js -c .storybook -o docs/
                      else
                          echo "Last commit wasn't a version bump. Not building docs"
                      fi
                  no_output_timeout: 30m
            - run:
                  name: 'Relase current build'
                  command: |
                      if [ -f /tmp/.docs_build_${CIRCLE_SHA1} ]; then
                          git config --global user.email "${GITHUB_EMAIL}"
                          git config --global user.name "${GITHUB_NAME}"
                          git add .
                          git commit -am '[Bot] Building Docs'
                          git push origin master
                      else
                          echo "Last commit wasn't a version bump. Not building docs"
                      fi

workflows:
    version: 2
    build_test:
        jobs:
            - install_npm_modules:
                  context: ci_builds
            - build:
                  requires:
                      - install_npm_modules
                  context: ci_builds
            - test:
                  requires:
                      - install_npm_modules
                  context: ci_builds
            - release_node_module:
                  requires:
                      - install_npm_modules
                      - build
                  filters:
                      branches:
                          only: master
                  context: ci_builds
            - build_and_publish_docs:
                  filters:
                      branches:
                          only: master
                  context: ci_builds
